{"version":3,"sources":["logo.svg","firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","aria-labelledby","aria-describedby","className","placeholder","todo","value","onChange","target","Button","onClick","collection","doc","id","set","merge","variant","color","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d021c46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDYlNbbnMYxqdcMpMG8_lSIJ2D6waxUB0E\",\r\n    authDomain: \"todo-app-react-ae19a.firebaseapp.com\",\r\n    projectId: \"todo-app-react-ae19a\",\r\n    storageBucket: \"todo-app-react-ae19a.appspot.com\",\r\n    messagingSenderId: \"369186809997\",\r\n    appId: \"1:369186809997:web:7298135efe661001fa1ac4\",\r\n    measurementId: \"G-PBT9J0VKY3\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\n\r\nexport default db","import {  Button, List, ListItem, ListItemAvatar, ListItemText,makeStyles,Modal } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport './Todo.css'\r\nimport db from './firebase'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\nfunction Todo(props) {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n  const [input, setInput] = useState()\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }\r\n  const updateTodo = () => {\r\n    db.collection('todos').doc(props.todo.id).set({\r\n      todo: input\r\n    }, {merge: true})\r\n    setOpen(false)\r\n  }\r\n \r\n  return (\r\n    // <div>\r\n    //    <li>{props.todo}</li>\r\n    // </div>\r\n    <>\r\n       <Modal\r\n     open={open}\r\n     onClose={e => setOpen(false)}\r\n     aria-labelledby=\"simple-modal-title\"\r\n     aria-describedby=\"simple-modal-description\">\r\n     <div className={classes.paper}>\r\n       <h1>I am a modal</h1>\r\n       <input placeholder={props.todo.todo} value={input} onChange={e => setInput(e.target.value)}/>\r\n       <Button onClick={updateTodo} variant=\"contained\" color=\"primary\">Update Todo</Button>\r\n     </div>\r\n      </Modal>\r\n    <List>\r\n        <ListItem>\r\n        <ListItemAvatar>\r\n        </ListItemAvatar>\r\n            <ListItemText primary={props.todo.todo} secondary=\"Dummy text...\"/>\r\n        </ListItem>\r\n        <button onClick={e => setOpen(true)}>Edit me</button>\r\n\r\n        <DeleteForeverIcon onClick={e => db.collection('todos').doc(props.todo.id).delete()}>DELETE ME</DeleteForeverIcon>\r\n    </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import logo from './logo.svg';\nimport React, {useEffect, useState} from 'react'\nimport './App.css';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './firebase'\nimport firebase from 'firebase'\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [input, setInput] = useState('');\n\n  //When the app loads, we need to listen to the database and fetch new todos as they get added or removed\n  useEffect(()=>{\n    //the code here fires when the app.js loads\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({id: doc.id, todo: doc.data().todo})))\n      // console.log(snapshot.docs.map(doc => doc.data().todo))\n    })\n  },[])\n  const addTodo = (e) => {\n    e.preventDefault();\n    // setTodos([...todos, input]);\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('')\n  }\n  return (\n    <div className=\"App\">\n     <h1>FADAHUNSI SEYI</h1>\n     <form>\n     <FormControl>\n  <InputLabel>Write a todo</InputLabel>\n  <Input  value={input} onChange={e => setInput(e.target.value)} />\n    </FormControl>\n     <Button disabled={!input} type=\"submit\" onClick={addTodo} variant=\"contained\" color=\"primary\">\n       Add Todo\n     </Button>\n     {/* <button type=\"submit\" onClick={addTodo}>Add Todo</button> */}\n     </form>\n\n  \n   \n     \n     <ul>\n     {todos.map(todo =>(\n       <Todo todo={todo}/>\n     ))}\n     </ul>\n    </div>\n  );\n}\n\nexport default App;\n// \"deploy\": \"npm run build && firebase deploy\",","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}